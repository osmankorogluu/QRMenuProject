@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/AdminLayoutController1/Index.cshtml";
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/microsoft/signalr/dist/browser/signalr.min.js"></script>

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="dashboard-container">
    <div class="dashboard-wrapper">

        <!-- Header -->
        <div class="dashboard-header">
            <div class="header-content">
                <div class="header-left">
                    <h1 class="header-title">Dashboard</h1>
                    <p class="header-subtitle">Canlı İstatistikler & Gerçek Zamanlı Takip</p>
                </div>
                <div class="header-right">
                    <div class="status-indicator">
                        <div class="status-dot" id="statusDot"></div>
                        <span class="status-text" id="connstatus">Bağlanıyor...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stats Grid -->
        <div class="stats-grid">

            <!-- Kategori Sayısı -->
            <div class="stat-card">
                <div class="stat-icon purple">
                    <i class="fas fa-layer-group"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Toplam Kategori</div>
                    <div class="stat-value" id="categorycount">0</div>
                </div>
            </div>

            <!-- Aktif Kategori -->
            <div class="stat-card">
                <div class="stat-icon green">
                    <i class="fas fa-check-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Aktif Kategori</div>
                    <div class="stat-value" id="activecategorycount">0</div>
                </div>
            </div>

            <!-- Pasif Kategori -->
            <div class="stat-card">
                <div class="stat-icon red">
                    <i class="fas fa-times-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Pasif Kategori</div>
                    <div class="stat-value" id="passivecategorycount">0</div>
                </div>
            </div>

            <!-- Ürün Sayısı -->
            <div class="stat-card">
                <div class="stat-icon blue">
                    <i class="fas fa-box-open"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Toplam Ürün</div>
                    <div class="stat-value" id="productcount">0</div>
                </div>
            </div>

            <!-- Aktif Sipariş -->
            <div class="stat-card">
                <div class="stat-icon orange">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Aktif Sipariş</div>
                    <div class="stat-value" id="activeordercount">0</div>
                </div>
            </div>

            <!-- Toplam Sipariş -->
            <div class="stat-card">
                <div class="stat-icon teal">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Toplam Sipariş</div>
                    <div class="stat-value" id="totalordercount">0</div>
                </div>
            </div>

            <!-- Bugünkü Ciro -->
            <div class="stat-card highlight">
                <div class="stat-icon gold">
                    <i class="fas fa-wallet"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Bugünkü Ciro</div>
                    <div class="stat-value" id="todaytotalprice">0 ₺</div>
                </div>
            </div>

            <!-- Toplam Kasa -->
            <div class="stat-card highlight">
                <div class="stat-icon indigo">
                    <i class="fas fa-cash-register"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Toplam Kasa</div>
                    <div class="stat-value" id="totalmoneycaseamount">0 ₺</div>
                </div>
            </div>

            <!-- Ortalama Ürün Fiyatı -->
            <div class="stat-card">
                <div class="stat-icon cyan">
                    <i class="fas fa-chart-pie"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Ort. Ürün Fiyatı</div>
                    <div class="stat-value" id="avgproductprice">0 ₺</div>
                </div>
            </div>

            <!-- Masa Sayısı -->
            <div class="stat-card">
                <div class="stat-icon pink">
                    <i class="fas fa-chair"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Toplam Masa</div>
                    <div class="stat-value" id="menutablecount">0</div>
                </div>
            </div>

            <!-- Rezervasyon -->
            <div class="stat-card">
                <div class="stat-icon violet">
                    <i class="fas fa-calendar-check"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Rezervasyon</div>
                    <div class="stat-value" id="bookingcount">0</div>
                </div>
            </div>

            <!-- İndirim Sayısı -->
            <div class="stat-card">
                <div class="stat-icon amber">
                    <i class="fas fa-tags"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Aktif İndirim</div>
                    <div class="stat-value" id="discountcount">0</div>
                </div>
            </div>

            <!-- Hamburger -->
            <div class="stat-card">
                <div class="stat-icon brown">
                    <i class="fas fa-burger"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">Hamburger</div>
                    <div class="stat-value" id="hamburgercount">0</div>
                </div>
            </div>

            <!-- İçecek -->
            <div class="stat-card">
                <div class="stat-icon lightblue">
                    <i class="fas fa-wine-glass"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">İçecek</div>
                    <div class="stat-value" id="drinkcount">0</div>
                </div>
            </div>

            <!-- En Pahalı Ürün -->
            <div class="stat-card special">
                <div class="stat-icon emerald">
                    <i class="fas fa-crown"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">En Pahalı Ürün</div>
                    <div class="stat-value product-name" id="maxpricename">-</div>
                </div>
            </div>

            <!-- En Ucuz Ürün -->
            <div class="stat-card special">
                <div class="stat-icon rose">
                    <i class="fas fa-hand-holding-dollar"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-label">En Ucuz Ürün</div>
                    <div class="stat-value product-name" id="minpricename">-</div>
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        // Store previous values
        const previousValues = {};

        var connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:44366/signalRHub")
            .withAutomaticReconnect()
            .build();

        // Connection Event Handlers
        connection.onclose(() => {
            updateConnectionStatus('disconnected', 'Bağlantı Kesildi');
        });

        connection.onreconnecting(() => {
            updateConnectionStatus('connecting', 'Yeniden Bağlanıyor...');
        });

        connection.onreconnected(() => {
            updateConnectionStatus('connected', 'Bağlı');
        });

        function updateConnectionStatus(status, text) {
            const dot = document.getElementById('statusDot');
            const statusText = document.getElementById('connstatus');

            dot.className = 'status-dot ' + status;
            statusText.textContent = text;
        }

        // Value Update - ONLY animate if value actually changed
        function updateValue(elementId, newValue) {
            const element = document.getElementById(elementId);
            if (!element) return;

            const currentValue = element.textContent;

            // Only animate if value actually changed
            if (previousValues[elementId] !== undefined && previousValues[elementId] !== newValue) {
                element.classList.add('value-updating');
                setTimeout(() => {
                    element.classList.remove('value-updating');
                }, 400);
            }

            element.textContent = newValue;
            previousValues[elementId] = newValue;
        }

        // SignalR Receivers
        connection.on("ReceiveCategoryCount", (v) => updateValue("categorycount", v));
        connection.on("ReceiveActiveCategoryCount", (v) => updateValue("activecategorycount", v));
        connection.on("ReceivePassiveCategoryCount", (v) => updateValue("passivecategorycount", v));
        connection.on("ReceiveProductCount", (v) => updateValue("productcount", v));
        connection.on("ReceiveActiveOrderCount", (v) => updateValue("activeordercount", v));
        connection.on("ReceiveTotalOrderCount", (v) => updateValue("totalordercount", v));
        connection.on("ReceiveTodayTotalPrice", (v) => updateValue("todaytotalprice", v));
        connection.on("ReceiveTotalMoneyCaseAmount", (v) => updateValue("totalmoneycaseamount", v));
        connection.on("ReceiveMenuTableCount", (v) => updateValue("menutablecount", v));
        connection.on("ReceiveBookingCount", (v) => updateValue("bookingcount", v));
        connection.on("ReceiveDiscountCount", (v) => updateValue("discountcount", v));
        connection.on("ReceiveAvgProductPrice", (v) => updateValue("avgproductprice", v));
        connection.on("ReceiveProductNameByMaxPrice", (v) => updateValue("maxpricename", v));
        connection.on("ReceiveProductNameByMinPrice", (v) => updateValue("minpricename", v));
        connection.on("ReceiveProductCountByCategoryNameHamburger", (v) => updateValue("hamburgercount", v));
        connection.on("ReceiveProductCountByCategoryNameDrink", (v) => updateValue("drinkcount", v));

        // Start Connection
        connection.start().then(() => {
            updateConnectionStatus('connected', 'Bağlı');

            // Periodic Updates
            setInterval(() => {
                connection.invoke("SendCategoryCount");
                connection.invoke("ActiveCategoryCount");
                connection.invoke("PassiveCategoryCount");
                connection.invoke("SendProductCount");
                connection.invoke("SendActiveOrderCount");
                connection.invoke("SendTotalOrderCount");
                connection.invoke("SendTodayTotalPrice");
                connection.invoke("SendTotalMoneyCaseAmount");
                connection.invoke("SendMenuTableCount");
                connection.invoke("SendBookingCount");
                connection.invoke("SendDiscountCount");
                connection.invoke("SendAvgProductPrice");
                connection.invoke("SendProductNameByMaxPrice");
                connection.invoke("SendProductNameByMinPrice");
                connection.invoke("SendProductCountByCategoryNameHamburger");
                connection.invoke("SendProductCountByCategoryNameDrink");
            }, 2000);
        }).catch(err => {
            console.error("Bağlantı hatası:", err);
            updateConnectionStatus('disconnected', 'Bağlantı Hatası');
        });
    });
</script>

<style>
    /* Modern CSS Reset & Variables */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    :root {
        --bg-primary: #f8fafc;
        --bg-secondary: #ffffff;
        --bg-card: #ffffff;
        --text-primary: #0f172a;
        --text-secondary: #64748b;
        --border-color: #e2e8f0;
        --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    body {
        background: var(--bg-primary);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        color: var(--text-primary);
        line-height: 1.6;
    }

    .dashboard-container {
        min-height: 100vh;
        padding: 2rem;
    }

    .dashboard-wrapper {
        max-width: 1600px;
        margin: 0 auto;
    }

    /* Header */
    .dashboard-header {
        margin-bottom: 2rem;
        padding: 2rem;
        background: var(--bg-card);
        border-radius: 1rem;
        border: 1px solid var(--border-color);
        box-shadow: var(--shadow);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
    }

    .header-title {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-primary);
        margin-bottom: 0.25rem;
    }

    .header-subtitle {
        color: var(--text-secondary);
        font-size: 0.875rem;
        font-weight: 500;
    }

    /* Status Indicator */
    .status-indicator {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: #f1f5f9;
        border: 1px solid var(--border-color);
        border-radius: 2rem;
    }

    .status-dot {
        width: 10px;
        height: 10px;
        border-radius: 50%;
    }

        .status-dot.connected {
            background: #22c55e;
            box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.2);
        }

        .status-dot.connecting {
            background: #f59e0b;
            box-shadow: 0 0 0 2px rgba(245, 158, 11, 0.2);
        }

        .status-dot.disconnected {
            background: #ef4444;
            box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
        }

    .status-text {
        font-size: 0.8125rem;
        font-weight: 600;
        color: var(--text-primary);
    }

    /* Stats Grid */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.25rem;
    }

    /* Stat Card */
    .stat-card {
        position: relative;
        padding: 1.5rem;
        background: var(--bg-card);
        border: 1px solid var(--border-color);
        border-radius: 1rem;
        box-shadow: var(--shadow);
        transition: all 0.2s ease;
    }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
            border-color: #cbd5e1;
        }

        .stat-card.highlight {
            background: linear-gradient(135deg, #fef3c7 0%, #fef9c3 100%);
            border-color: #fde68a;
        }

        .stat-card.special {
            background: linear-gradient(135deg, #dbeafe 0%, #e0e7ff 100%);
            border-color: #bfdbfe;
        }

    /* Stat Icon */
    .stat-icon {
        width: 56px;
        height: 56px;
        border-radius: 0.875rem;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        font-size: 1.5rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

        /* Icon Colors - Light Theme */
        .stat-icon.purple {
            background: linear-gradient(135deg, #a78bfa 0%, #8b5cf6 100%);
            color: white;
        }

        .stat-icon.green {
            background: linear-gradient(135deg, #34d399 0%, #10b981 100%);
            color: white;
        }

        .stat-icon.red {
            background: linear-gradient(135deg, #f87171 0%, #ef4444 100%);
            color: white;
        }

        .stat-icon.blue {
            background: linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%);
            color: white;
        }

        .stat-icon.orange {
            background: linear-gradient(135deg, #fb923c 0%, #f97316 100%);
            color: white;
        }

        .stat-icon.teal {
            background: linear-gradient(135deg, #2dd4bf 0%, #14b8a6 100%);
            color: white;
        }

        .stat-icon.gold {
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
            color: white;
        }

        .stat-icon.indigo {
            background: linear-gradient(135deg, #818cf8 0%, #6366f1 100%);
            color: white;
        }

        .stat-icon.cyan {
            background: linear-gradient(135deg, #22d3ee 0%, #06b6d4 100%);
            color: white;
        }

        .stat-icon.pink {
            background: linear-gradient(135deg, #f472b6 0%, #ec4899 100%);
            color: white;
        }

        .stat-icon.violet {
            background: linear-gradient(135deg, #c084fc 0%, #a855f7 100%);
            color: white;
        }

        .stat-icon.amber {
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
            color: white;
        }

        .stat-icon.brown {
            background: linear-gradient(135deg, #d97706 0%, #b45309 100%);
            color: white;
        }

        .stat-icon.lightblue {
            background: linear-gradient(135deg, #38bdf8 0%, #0ea5e9 100%);
            color: white;
        }

        .stat-icon.emerald {
            background: linear-gradient(135deg, #34d399 0%, #10b981 100%);
            color: white;
        }

        .stat-icon.rose {
            background: linear-gradient(135deg, #fb7185 0%, #f43f5e 100%);
            color: white;
        }

    /* Stat Content */
    .stat-content {
        position: relative;
        z-index: 1;
    }

    .stat-label {
        font-size: 0.8125rem;
        font-weight: 600;
        color: var(--text-secondary);
        text-transform: uppercase;
        letter-spacing: 0.05em;
        margin-bottom: 0.5rem;
    }

    .stat-value {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-primary);
        line-height: 1.2;
        transition: color 0.3s ease;
    }

        .stat-value.product-name {
            font-size: 1.125rem;
            font-weight: 600;
            word-break: break-word;
        }

        /* Only animate when value actually changes */
        .stat-value.value-updating {
            color: #3b82f6;
        }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .stats-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        }
    }

    @@media (max-width: 768px) {
        .dashboard-container {
            padding: 1rem;
        }

        .dashboard-header {
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .header-content {
            flex-direction: column;
            text-align: center;
        }

        .header-title {
            font-size: 1.75rem;
        }

        .stats-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .stat-card {
            padding: 1.25rem;
        }

        .stat-value {
            font-size: 1.75rem;
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            font-size: 1.25rem;
        }
    }

    @@media (max-width: 480px) {
        .header-title {
            font-size: 1.5rem;
        }

        .stat-value {
            font-size: 1.5rem;
        }
    }

    /* Scrollbar */
    ::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }

    ::-webkit-scrollbar-track {
        background: #f1f5f9;
    }

    ::-webkit-scrollbar-thumb {
        background: #cbd5e1;
        border-radius: 5px;
    }

        ::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }
</style>
